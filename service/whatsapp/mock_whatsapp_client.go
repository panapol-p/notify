// Code generated by mockery v2.14.0. DO NOT EDIT.

package whatsapp

import (
	go_whatsapp "github.com/Rhymen/go-whatsapp"
	mock "github.com/stretchr/testify/mock"
)

// mockWhatsappClient is an autogenerated mock type for the whatsappClient type
type mockWhatsappClient struct {
	mock.Mock
}

// Login provides a mock function with given fields: qrChan
func (_m *mockWhatsappClient) Login(qrChan chan<- string) (go_whatsapp.Session, error) {
	ret := _m.Called(qrChan)

	var r0 go_whatsapp.Session
	if rf, ok := ret.Get(0).(func(chan<- string) go_whatsapp.Session); ok {
		r0 = rf(qrChan)
	} else {
		r0 = ret.Get(0).(go_whatsapp.Session)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(chan<- string) error); ok {
		r1 = rf(qrChan)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RestoreWithSession provides a mock function with given fields: session
func (_m *mockWhatsappClient) RestoreWithSession(session go_whatsapp.Session) (go_whatsapp.Session, error) {
	ret := _m.Called(session)

	var r0 go_whatsapp.Session
	if rf, ok := ret.Get(0).(func(go_whatsapp.Session) go_whatsapp.Session); ok {
		r0 = rf(session)
	} else {
		r0 = ret.Get(0).(go_whatsapp.Session)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(go_whatsapp.Session) error); ok {
		r1 = rf(session)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Send provides a mock function with given fields: msg
func (_m *mockWhatsappClient) Send(msg interface{}) (string, error) {
	ret := _m.Called(msg)

	var r0 string
	if rf, ok := ret.Get(0).(func(interface{}) string); ok {
		r0 = rf(msg)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(interface{}) error); ok {
		r1 = rf(msg)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTnewMockWhatsappClient interface {
	mock.TestingT
	Cleanup(func())
}

// newMockWhatsappClient creates a new instance of mockWhatsappClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockWhatsappClient(t mockConstructorTestingTnewMockWhatsappClient) *mockWhatsappClient {
	mock := &mockWhatsappClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
